name: CI

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: 'Nuget package version'     
        required: false
        default: '1.0.0'

env: 
  PROJECT_PATH: 'Artnix.Scheduler/Artnix.Scheduler.sln'
  PROJECT_OUTPUT_DIR: ${{ github.workspace }}\artifacts
  NUGET_SOURCE_URI: 'https://api.nuget.org/v3/index.json'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: windows-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    
    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}
    
    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

    - name: Set Pack Configuration
      run: echo '::set-output name=Release::--no-restore --no-build --configuration Release --include-symbols -p:PackageVersion=${{ github.event.inputs.packageVersion }} --output ${{ env.PROJECT_OUTPUT_DIR }}'
      id: pack_configuration
    
    - name: Pack Artnix.Scheduler
      run: dotnet pack 'Artnix.Scheduler/Artnix.Scheduler/Artnix.Scheduler.csproj' ${{ steps.pack_configuration.outputs.Release }}
    
    - name: Pack Artnix.SchedulerFramework.DependencyInjection
      run: dotnet pack 'Artnix.Scheduler/Artnix.Scheduler.DependencyInjection/Artnix.Scheduler.DependencyInjection.csproj' ${{ steps.pack_configuration.outputs.Release }}
    

    - name: Push
      run: dotnet nuget push ${{ env.PROJECT_OUTPUT_DIR }}\*.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URI }}
